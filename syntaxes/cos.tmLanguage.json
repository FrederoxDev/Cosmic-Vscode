{
  "scopeName": "source.cos",
  "patterns": [
    {"include": "#expression"},
    {"include": "#keywords"}
  ],
  "repository": {
    "expression": {
      "patterns": [
        {
          "include": "#atom"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {"include": "#if"},
        {"include": "#else"},
        {"include": "#while"}
      ]
    },
    "if": {
      "name": "keyword.control",
      "match": "\\bif\\b"
    },
    "else": {
      "name": "keyword.control",
      "match": "\\belse\\b"
    },
    "while": {
      "name": "keyword.control",
      "match": "\\bwhile\\b"
    },
    "atom": {
      "patterns": [
        {"include": "#string"},
        {"include": "#boolean"},
        {"include": "#number"},
        {"include": "#group"},
        {"include": "#index"}
      ]
    },
    "number": {
      "name": "constant.numeric",
      "match": "\\b[0-9]+\\b"
    },
    "string": {
      "name": "string.quoted.double",
      "begin": "\"",
      "end": "\""
    },
    "boolean": {
      "name": "constant.language.boolean",
      "match": "\\b(true|false)\\b"
    },
    "group": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close" }
      },
      "name": "expression.group",
      "patterns": [{ "include": "#expression" }]
    },
    "index": {
      "begin": "\\[",
      "end": "\\]",
      "beginCaptures": {
        "0": { "name": "punctuation.brackets.square" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.brackets.square" }
      },
      "name": "expression.group",
      "patterns": [{ "include": "#expression" }]
    }
  }
}